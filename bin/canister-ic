#!/usr/bin/env bash
set -e -o pipefail

PEM_FILE=${PEM_FILE:-$(echo $PEM_OPT | sed -e 's/^[^ ]* //')}
PRINCIPAL=$(quill --pem-file $PEM_FILE public-ids | grep Principal | sed -e 's/.*: //')

PEM_OPT="--pem $PEM_FILE"
export PEM_OPT

UTIL=$(dirname $(realpath $0))/..
export PATH="$UTIL/bin:$PATH"

DID_OPT="--candid $UTIL/share/did/ic.did"
export DID_OPT

IC_MANAGEMENT_ID=aaaaa-aa

function canister_settings() {
  echo "record { controllers = opt vec { principal \"$PRINCIPAL\" } }"
}

function install_code() {
  local canister_id=$1
  local bytes=$(xxd -p "$2" | sed -e 's/../\\&/g' | tr -d '\n')
  local arg
  if [[ -n "$3" ]]; then
    arg="$(didc encode "$3" -f blob)"
  else
    arg='blob ""'
  fi
  echo "(record {
           mode = variant { $MODE };
           canister_id = principal \"$canister_id\";
           wasm_module = blob \"$bytes\";
           arg = $arg; })" | canister update $IC_MANAGEMENT_ID install_code -
}

function canister_status() {
  local arg="record { canister_id = principal \"$1\"; }"
  canister update $IC_MANAGEMENT_ID canister_status "($arg)"
}

function start_canister() {
  local arg="record { canister_id = principal \"$1\"; }"
  canister update $IC_MANAGEMENT_ID start_canister "($arg)"
}

function stop_canister() {
  local arg="record { canister_id = principal \"$1\"; }"
  canister update $IC_MANAGEMENT_ID stop_canister "($arg)"
}

function update_settings() {
  local arg="record { canister_id = principal \"$1\"; settings = $2; }"
  canister update $IC_MANAGEMENT_ID update_settings "($arg)"
}

function provisional_create_canister() {
  local arg="record {
               amount = opt 10_000_000_000_000;
               settings = opt $(canister_settings);
             }"
  canister update $IC_MANAGEMENT_ID provisional_create_canister_with_cycles "($arg)"
}

function provisional_top_up_canister() {
  local arg="record { canister_id: principal \"$1\"; amount: $2 }"
  canister update $IC_MANAGEMENT_ID provisional_top_up_canister "($arg)"
}

method=$1
shift
case "$method" in
  install_code) install_code "$1" "$2" "$3" ;;
  canister_status) canister_status "$1" ;;
  start_canister) start_canister "$1" ;;
  stop_canister) stop_canister "$1" ;;
  update_settings) update_settings "$1" "$2";;
  provisional_create_canister) provisional_create_canister ;;
  provisional_top_up_canister) provisional_top_up_canister "$1" "$2" ;;
  *) echo "Unknown or unsuported method '$method'" && exit 1 ;;
esac
